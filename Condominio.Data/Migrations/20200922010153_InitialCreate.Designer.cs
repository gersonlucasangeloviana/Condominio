// <auto-generated />
using GestaoCondominio.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestaoCondominio.Data.Migrations
{
    [DbContext(typeof(GestaoCondominioDbContext))]
    [Migration("20200922010153_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestaoCondominio.Domain.Entities.Condominio", b =>
                {
                    b.Property<int>("CondominioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("CondominioId");

                    b.ToTable("Condominio");
                });

            modelBuilder.Entity("GestaoGestaoCondominio.Domain.Entities.Familia", b =>
                {
                    b.Property<int>("FamiliaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Apartamento")
                        .HasColumnType("int");

                    b.Property<int>("CondominioId")
                        .HasColumnName("Id_Condominio")
                        .HasColumnType("int");

                    b.HasKey("FamiliaId");

                    b.HasIndex("CondominioId");

                    b.ToTable("Familia");
                });

            modelBuilder.Entity("GestaoGestaoCondominio.Domain.Entities.Morador", b =>
                {
                    b.Property<int>("MoradorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FamiliaId")
                        .HasColumnName("Id_Familia")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("QuantidadeBichosEstimacao")
                        .HasColumnType("int");

                    b.HasKey("MoradorId");

                    b.HasIndex("FamiliaId");

                    b.ToTable("Morador");
                });

            modelBuilder.Entity("GestaoGestaoCondominio.Domain.Entities.Familia", b =>
                {
                    b.HasOne("GestaoCondominio.Domain.Entities.Condominio", "Condominio")
                        .WithMany()
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestaoGestaoCondominio.Domain.Entities.Morador", b =>
                {
                    b.HasOne("GestaoGestaoCondominio.Domain.Entities.Familia", "Familia")
                        .WithMany()
                        .HasForeignKey("FamiliaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
